@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --font-cinzel: "Cinzel", serif;
  --font-fraktur: "UnifrakturCook", cursive;
}

.font-[Cinzel] {
  font-family: var(--font-cinzel)
}

.font-[UnifrakturCook] {
  font-family: var(--font-fraktur)
}

html,
body,
#root {
  height: 100%
}



/* ===== ORDO: stained glass + torch flicker ===== */
.ordo-glass {
  position: fixed;
  inset: 0;
  z-index: -10;
  pointer-events: none;
  background-image:
    linear-gradient(125deg, rgba(255, 214, 120, 0.035) 0 2px, transparent 2px 100%),
    linear-gradient(55deg, rgba(255, 170, 90, 0.03) 0 1px, transparent 1px 100%);
  background-size: 56px 56px, 72px 72px;
  mix-blend-mode: overlay;
  animation: glass-pan 28s linear infinite;
}

@keyframes glass-pan {
  0% {
    background-position: 0% 0%, 0% 100%;
  }

  100% {
    background-position: 100% 0%, 100% 100%;
  }
}

.ordo-torch {
  position: fixed;
  inset: 0;
  z-index: -10;
  pointer-events: none;
  background:
    radial-gradient(380px 220px at 8% 86%, rgba(255, 180, 80, 0.18), transparent 60%),
    radial-gradient(420px 260px at 92% 86%, rgba(255, 200, 120, 0.16), transparent 60%);
  animation: torch-flicker 3.6s ease-in-out infinite;
  opacity: .18;
}

@keyframes torch-flicker {
  0% {
    opacity: .12
  }

  25% {
    opacity: .22
  }

  50% {
    opacity: .17
  }

  75% {
    opacity: .24
  }

  100% {
    opacity: .18
  }
}

/* ===== ORDO: 3D tile hover ===== */
.tile3d {
  transform-style: preserve-3d;
  transition: transform 280ms cubic-bezier(.22, .61, .36, 1), box-shadow 280ms;
  will-change: transform;
}

.tile3d[data-elev="1"] {
  box-shadow: 0 18px 40px rgba(0, 0, 0, .45);
}

.tile3d-glint {
  pointer-events: none;
  position: absolute;
  inset: 0;
  background: radial-gradient(240px 160px at var(--ox, 50%) var(--oy, 50%),
      rgba(255, 255, 255, .08), transparent 60%);
}

/* cursors */
body {
  cursor: url('/cursor/gauntlet.png') 16 0, auto;
}

a,
button {
  cursor: url('/cursor/gauntlet-tap.png') 16 0, pointer;
}

.ordocursor,
.ordocursor * {
  cursor: url('/cursor/gauntlet-tap.png') 16 0, pointer !important;
}


/* Subtle light sweep across cards every 10s 
@keyframes sweep {
  0%   { transform: translateX(-140%) skewX(-10deg); opacity: 0; }
  6%   { transform: translateX(0%)    skewX(-10deg); opacity: .06; }
  12%  { transform: translateX(140%)  skewX(-10deg); opacity: 0; }
  100% { transform: translateX(140%)  skewX(-10deg); opacity: 0; }
}
.lightsweep {
  overflow: hidden;
}
.lightsweep::before {
  content: "";
  position: absolute;
  top: 0; bottom: 0;
  width: 35%;
  left: -35%;
  background: linear-gradient(120deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.12) 45%, rgba(255,255,255,0.18) 50%, rgba(255,255,255,0.12) 55%, rgba(255,255,255,0) 100%);
  filter: blur(1px);
  animation: sweep 10s linear infinite;
  pointer-events: none;
  will-change: transform, opacity;
}
@media (prefers-reduced-motion: reduce) {
  .lightsweep::before { animation: none; opacity: 0; }
}

*/

/* ===== Mobile landscape fixes ===== */
@media (orientation: landscape) and (max-height: 520px) {

  /* Карточки: не прыгают по размеру, медиа и текст ужимаются предсказуемо */
  .card-root {
    height: 86vh;
    /* одна «страница» */
    max-height: 86vh;
    display: grid;
    grid-template-columns: 1fr 1.1fr;
    /* слева картинка, справа текст */
    gap: 16px;
    align-items: center;
  }

  .card-media {
    max-height: 80vh;
    height: 80vh;
    object-fit: contain;
  }

  .card-body {
    min-height: 0;
    overflow: auto;
    /* если текст длинный — скролл внутри, а не по странице */
  }

  /* Лайтбокс компактнее в горизонтали на мобилке */
  .lightbox-size {
    width: 92vw !important;
    height: 86vh !important;
    max-height: 86vh !important;
  }

  /* Прячем лор на мобилке-горизонтали */
  .hide-on-mobile-landscape {
    display: none !important;
  }
}

/* На маленьких экранах по высоте — держим всё в одном экране */
@media (max-height: 700px) and (max-width: 1024px) {
  .lightbox-size {
    width: 92vw;
    height: 86vh;
    max-height: 86vh;
  }
}

/* Чуть мягче переполнение по редким кейсам */
html,
body,
#root {
  height: 100%;
  overscroll-behavior-y: contain;
}


/* helper: hidden by default */
.show-on-mobile-landscape {
  display: none;
}

@media (orientation: landscape) and (max-height: 520px) {
  .show-on-mobile-landscape {
    display: block;
  }
}


/* Equalize card dimensions on mobile landscape */
@media (orientation: landscape) and (max-height: 520px) {
  .card-equal {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 86vh;
    width: 44vw;
  }
}


/* Force one-column grid in mobile landscape to avoid squeeze/overflow */
@media (orientation: landscape) and (max-height: 520px) {
  .cards-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
    column-gap: 16px;
    row-gap: 16px;
  }

  /* ensure inner text doesn't push layout */
  .card-root {
    align-items: center;
  }

  .card-body {
    overflow: auto;
  }
}


/* Scale gallery cards down by 10% in mobile landscape */
@media (orientation: landscape) and (max-height: 520px) {
  .card-scale-90 {
    transform: scale(0.9);
    transform-origin: center;
  }
}


/* Make lightbox image fill almost entire card height on mobile */
@media (max-width: 639px) {
  .img-fullcard {
    max-height: calc(100dvh - 240px);
  }
}

@layer components {
  .light-sweep {
    position: relative;
    overflow: hidden;
  }

  .light-sweep:hover::after {
    content: "";
    position: absolute;
    top: -120%;
    left: -120%;
    width: 60%;
    height: 1200%;
    background: linear-gradient(4deg,
        /* угол блика */
        transparent 0%,
        rgba(255, 233, 194, 0.25) 50%,
        transparent 100%);
    transform: translate(-50%, -100%) rotate(45deg);
    animation: sweep 5s linear infinite;
    pointer-events: none;
  }

  @keyframes sweep {
    from {
      transform: translate(-100%, -100%) rotate(45deg);
      opacity: 0;
    }

    20% {
      opacity: 1;
    }

    to {
      transform: translate(100%, 100%) rotate(45deg);
      opacity: 0;
    }
  }
}
@layer utilities {

  /* 3D-контекст */
  .perspective-1000 {
    perspective: 1000px;
  }

  .preserve-3d {
    transform-style: preserve-3d;
  }

  .backface-hidden {
    backface-visibility: hidden;
  }

  /* родительская «плита», куда применяем наклон */
  .tilt-3d {
    transform: rotateX(var(--rx, 0deg)) rotateY(var(--ry, 0deg));
    transition: transform .15s ease-out;
    will-change: transform;
  }

  /* сам арт — «поднимем» над плитой и даём микросдвиг */
  .lift-3d {
    transform:
      translateZ(var(--tz, 0px)) translateX(var(--tx, 0px)) translateY(var(--ty, 0px));
    transition: transform .15s ease-out;
    will-change: transform;
  }

  /* мягкая тень, чтобы чувствовалась высота */
  .parallax-shadow {
    box-shadow: 0 24px 60px rgba(0, 0, 0, .45);
  }

  /* анимации отключаем тем, кто их просил убрать */
  @media (prefers-reduced-motion: reduce) {

    .tilt-3d,
    .lift-3d {
      transition: none;
    }
  }
}


/* Center card image on mobile landscape */
@media (orientation: landscape) and (max-width: 767px) {
  .media-center-on-mobile-landscape {
    display: flex;
    justify-content: center;
    align-items: center;
  }
}
/* Intro-screen responsive text fixes */
@media (max-width: 767px) {
  .intro-title {
    font-size: 1.5rem;
    /* ~24px вместо огромного */
    line-height: 1.2;
  }

  .intro-text {
    font-size: 0.9rem;
    /* ~14px */
    line-height: 1.4;
    padding: 0 0.5rem;
    /* чуть сжать поля */
  }
}

@media (max-width: 1023px) {
  .intro-title {
    font-size: 1.75rem;
    /* средние экраны — чуть меньше, чем desktop */
    line-height: 1.3;
  }

  .intro-text {
    font-size: 1rem;
    line-height: 1.5;
  }
}


/* ================= Tablet Portrait Tweaks (768–1024px) ================= */
@media (min-width: 768px) and (max-width: 1024px) and (orientation: portrait) {
  /* --- Main cards grid: make all items equal height --- */
  .cards-grid > * { height: 100%; }
  .cards-grid > * > * { height: 100%; }
  .card-root { height: 100%; display: flex; flex-direction: column; }/* --- Fullscreen card (lightbox) behaves like phone --- */
  /* Root overlay */
  .fixed.inset-0.z-50 { padding: 0; }
  /* Dialog container (Tile3D/light-sweep wrapper) */
  .fixed.inset-0.z-50 .light-sweep {
    width: 92vw;
    max-width: 92vw;
    max-height: 90vh;
    margin: 0 auto;
    border-radius: 14px;
    overflow: hidden;
  }
  /* Grid to single column */
  .fixed.inset-0.z-50 .light-sweep .grid {
    grid-template-columns: 1fr !important;
  }
  .fixed.inset-0.z-50 .light-sweep .grid > * {
    width: 100%;
  }
  /* Media (left column) */
  .fixed.inset-0.z-50 .light-sweep .grid > *:first-child {
    max-height: 48vh;
    aspect-ratio: 3 / 4;
  }
  .fixed.inset-0.z-50 .light-sweep .grid > *:first-child img,
  .fixed.inset-0.z-50 .light-sweep .grid > *:first-child video,
  .fixed.inset-0.z-50 .light-sweep .grid > *:first-child canvas {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
  /* Text column scroll area */
  .fixed.inset-0.z-50 .light-sweep .grid > *:last-child {
    max-height: calc(90vh - 48vh - 56px);
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }
  /* Titles and text slightly smaller (phone-like) */
  .fixed.inset-0.z-50 h3 { font-size: clamp(20px, 2.4vw, 22px); line-height: 1.2; }
  .fixed.inset-0.z-50 p, .fixed.inset-0.z-50 li { font-size: clamp(14px, 2vw, 15px); }
  /* Actions wrap neatly */
  .fixed.inset-0.z-50 .flex.items-center.gap-3, 
  .fixed.inset-0.z-50 .actions, 
  .fixed.inset-0.z-50 .btn-row {
    display: flex; flex-wrap: wrap; gap: 8px;
  }
}
/* === Tablet Portrait: uniform card size via scale === */
@media (min-width: 768px) and (max-width: 1024px) and (orientation: portrait) {
  .cards-grid>* {
    transform: scale(0.85);
    transform-origin: top center;
    /* можно center center, если нужно ровно по середине */
  }

  /* Чтобы сетка не «рассыпалась» из-за скейла */
  .cards-grid {
    gap: 1rem;
    /* зазор между карточками, можешь подправить */
  }
}
/* анимированная градиентная рамка (поверх card bg, не мешает контенту) */
.borderAnim {
  --g1: rgba(251, 191, 36, .85);
  /* amber */
  --g2: rgba(34, 211, 238, .85);
  /* cyan  */
  border-radius: 1rem;
  /* 16px ~ rounded-2xl с inset */
  mask-composite: exclude;
}

.borderAnim::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  padding: 2px;
  background: linear-gradient(120deg, var(--g1), var(--g2), var(--g1));
  background-size: 220% 220%;
  animation: borderFlow 8s ease-in-out infinite;
  -webkit-mask:
    linear-gradient(#000 0 0) content-box,
    linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
}

@keyframes borderFlow {
  0% {
    background-position: 0% 50%;
  }

  50% {
    background-position: 100% 50%;
  }

  100% {
    background-position: 0% 50%;
  }
}

/* shine sweep при hover */
.shine {
  background:
    linear-gradient(100deg,
      rgba(255, 255, 255, 0) 20%,
      rgba(255, 255, 255, 0.12) 50%,
      rgba(255, 255, 255, 0) 80%);
  transform: translateX(-120%);
  animation: none;
}

.group:hover .shine {
  animation: shineMove 1s ease-out forwards;
}

@keyframes shineMove {
  to {
    transform: translateX(120%);
  }
}

/* shimmer skeleton */
.shimmer {
  background: linear-gradient(90deg, rgba(255, 255, 255, .05) 0%, rgba(255, 255, 255, .12) 50%, rgba(255, 255, 255, .05) 100%);
  background-size: 200% 100%;
  animation: shimmerMove 1.1s linear infinite;
}

@keyframes shimmerMove {
  to {
    background-position: -200% 0;
  }
}
/* shine по диагонали при hover — без рамок */
.hm-shine {
  background: linear-gradient(100deg,
      rgba(255, 255, 255, 0) 20%,
      rgba(255, 255, 255, 0.10) 50%,
      rgba(255, 255, 255, 0) 80%);
  transform: translateX(-120%);
  animation: none;
}

.group:hover .hm-shine {
  animation: hmShineMove 0.9s ease-out forwards;
}

@keyframes hmShineMove {
  to {
    transform: translateX(120%);
  }
}
.homm-frame {
  padding: 32px;
  /* чтобы освободить место под рамку */
}
/* ===== Torch-flicker for title ===== */
@keyframes torchFlicker {

  0%,
  100% {
    filter: drop-shadow(0 0 0px rgba(255, 210, 120, .0));
    opacity: 1;
  }

  10% {
    filter: drop-shadow(0 0 8px rgba(255, 210, 120, .35));
  }

  20% {
    filter: drop-shadow(0 0 3px rgba(255, 210, 120, .15));
  }

  30% {
    filter: drop-shadow(0 0 10px rgba(255, 210, 120, .45));
  }

  40% {
    filter: drop-shadow(0 0 5px rgba(255, 210, 120, .2));
  }

  50% {
    filter: drop-shadow(0 0 12px rgba(255, 210, 120, .55));
  }

  60% {
    filter: drop-shadow(0 0 4px rgba(255, 210, 120, .25));
  }

  70% {
    filter: drop-shadow(0 0 9px rgba(255, 210, 120, .4));
  }

  80% {
    filter: drop-shadow(0 0 6px rgba(255, 210, 120, .3));
  }

  90% {
    filter: drop-shadow(0 0 11px rgba(255, 210, 120, .5));
  }
}

.flicker {
  animation: torchFlicker 2.2s infinite steps(20);
}

/* ===== Holy halo behind modal (appears on hover) ===== */
@keyframes holyGlow {
  0% {
    opacity: .0;
    transform: translate(-50%, -50%) scale(0.98);
  }

  50% {
    opacity: .45;
    transform: translate(-50%, -50%) scale(1.03);
  }

  100% {
    opacity: .0;
    transform: translate(-50%, -50%) scale(0.98);
  }
}

.holy-halo {
  position: absolute;
  inset: 0;
  pointer-events: none;
}

.holy-halo::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  width: 160%;
  height: 160%;
  background: radial-gradient(circle at 50% 50%,
      rgba(255, 230, 140, .30), rgba(255, 180, 60, .22) 35%,
      rgba(255, 140, 40, .12) 55%, rgba(0, 0, 0, 0) 70%);
  opacity: 0;
  transform: translate(-50%, -50%) scale(1);
  border-radius: 50%;
}

.homm-frame:hover+.holy-halo::before,
.homm-frame:hover::after {
  animation: holyGlow 1.6s ease-in-out infinite;
}

/* ===== Fancy gender pill (fallback if нет Tailwind плагинов) ===== */
.gender-pill {
  display: flex;
  border-radius: 12px;
  overflow: hidden;
}

.gender-pill button {
  flex: 1;
  padding: .65rem 1rem;
  font-weight: 600;
  transition: all .2s ease;
  background: rgba(24, 20, 16, .55);
  color: rgba(255, 220, 180, .7);
  border: 1px solid rgba(190, 140, 60, .25);
}

.gender-pill button.active {
  background: linear-gradient(180deg, #6b3f1a, #3b2414 70%, #2c1a0f);
  color: #f7e3b8;
  box-shadow: inset 0 1px 0 rgba(255, 220, 170, .25);
}

.gender-pill button:not(.active):hover {
  background: rgba(38, 30, 24, .65);
}
/* ——— Факельное мерцание заголовка ——— */
@keyframes torchFlicker {

  0%,
  100% {
    filter: drop-shadow(0 0 0 rgba(255, 210, 120, 0));
  }

  10% {
    filter: drop-shadow(0 0 6px rgba(255, 210, 120, .25));
  }

  30% {
    filter: drop-shadow(0 0 12px rgba(255, 210, 120, .45));
  }

  50% {
    filter: drop-shadow(0 0 8px rgba(255, 210, 120, .30));
  }

  70% {
    filter: drop-shadow(0 0 14px rgba(255, 210, 120, .5));
  }

  90% {
    filter: drop-shadow(0 0 7px rgba(255, 210, 120, .25));
  }
}

.flicker {
  animation: torchFlicker 2.4s infinite steps(20);
}

/* ——— «Святой» ореол ПОЗАДИ модалки ——— */
@keyframes holyGlow {
  0% {
    opacity: .0;
    transform: translate(-50%, -50%) scale(.98);
  }

  50% {
    opacity: .45;
    transform: translate(-50%, -50%) scale(1.04);
  }

  100% {
    opacity: .0;
    transform: translate(-50%, -50%) scale(.98);
  }
}

.holy-halo {
  position: absolute;
  inset: 0;
  pointer-events: none;
}

.holy-halo::before {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  width: 160%;
  height: 160%;
  background: radial-gradient(circle, rgba(255, 230, 140, .30), rgba(255, 180, 60, .18) 40%, rgba(0, 0, 0, 0) 70%);
  opacity: 0;
  transform: translate(-50%, -50%);
  border-radius: 50%;
}

/* запускаем анимацию при hover на контейнер */
.halo-parent:hover .holy-halo::before {
  animation: holyGlow 1.6s ease-in-out infinite;
}

/* ——— Красивый инпут ——— */
.input-arcane {
  background: linear-gradient(180deg, rgba(40, 33, 28, .85), rgba(28, 22, 18, .78));
  border-radius: 14px;
  border: 1px solid rgba(190, 140, 60, .25);
  color: #f3e7c6;
  padding: .75rem 1rem;
  outline: none;
  transition: box-shadow .2s ease, border-color .2s ease;
}

.input-arcane::placeholder {
  color: rgba(240, 210, 150, .45);
}

.input-arcane:focus {
  border-color: rgba(255, 210, 120, .55);
  box-shadow: 0 0 0 2px rgba(255, 210, 120, .12), inset 0 0 22px rgba(255, 200, 120, .12);
}

/* ——— Тумблер пола со «скользящей плашкой» ——— */
.toggle-rite {
  position: relative;
  display: grid;
  grid-template-columns: 1fr 1fr;
  border-radius: 14px;
  overflow: hidden;
  border: 1px solid rgba(190, 140, 60, .28);
  background: rgba(30, 24, 20, .6);
}

.toggle-rite .thumb {
  position: absolute;
  top: 3px;
  bottom: 3px;
  width: calc(50% - 6px);
  left: 3px;
  border-radius: 10px;
  background: linear-gradient(180deg, #6b3f1a, #3b2414 70%, #2c1a0f);
  box-shadow: inset 0 1px 0 rgba(255, 220, 170, .25), 0 6px 14px rgba(0, 0, 0, .25);
  transition: transform .22s ease;
}

.toggle-rite[data-side="R"] .thumb {
  transform: translateX(100%);
}

.toggle-rite button {
  position: relative;
  z-index: 1;
  padding: .7rem 1rem;
  font-weight: 700;
  color: rgba(255, 220, 180, .75);
  transition: color .2s ease;
}

.toggle-rite button.active {
  color: #f7e3b8;
}
.btn-ordo {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: .7rem 1rem;
  border-radius: 12px;
  background: linear-gradient(180deg, rgba(60, 45, 30, .9), rgba(35, 26, 18, .9));
  color: #f7e9c9;
  font-weight: 700;
  border: 1px solid rgba(190, 140, 60, .3);
  box-shadow: inset 0 1px 0 rgba(255, 220, 170, .2);
  transition: transform .08s ease, background .2s ease, box-shadow .2s ease;
}

.btn-ordo:hover {
  background: linear-gradient(180deg, rgba(70, 55, 35, .95), rgba(40, 30, 20, .95));
  box-shadow: 0 0 18px rgba(251, 191, 36, .15);
}

.btn-ordo:active {
  transform: translateY(1px);
}

.btn-ordo-ghost {
  composes: btn-ordo;
  background: rgba(28, 22, 18, .6);
}
